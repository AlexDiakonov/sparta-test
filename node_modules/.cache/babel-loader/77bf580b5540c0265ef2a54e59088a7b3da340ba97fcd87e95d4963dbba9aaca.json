{"ast":null,"code":"var _jsxFileName = \"/Users/odiakonov/Desktop/testTask/sparta-test/src/components/ToDoList/ToDoList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ToDoItem from \"../ToDoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoList = () => {\n  _s();\n  const [todos, setTodos] = useState(JSON.parse(localStorage.getItem(\"todos\") || \"[]\"));\n  const [task, setTask] = useState(\"\");\n  const handleAdd = e => {\n    e.preventDefault();\n    if (task.trim() !== \"\") {\n      const newTodo = {\n        id: todos.length + 1,\n        task,\n        done: false\n      };\n      setTodos([...todos, newTodo]);\n      setTask(\"\");\n    }\n  };\n  useEffect(() => {\n    setTodos(JSON.parse(localStorage.getItem(\"todos\") || \"[]\"));\n  }, []);\n  useEffect(() => {\n    if (todos.length >= 0) {\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n    }\n  }, [todos]);\n  const handleUpdate = (id, updatedTask) => {\n    const updatedTodos = todos.map(todo => todo.id === id ? {\n      ...todo,\n      task: updatedTask\n    } : todo);\n    setTodos(updatedTodos);\n  };\n  const handleDone = id => {\n    const updatedTodos = todos.map(todo => todo.id === id ? {\n      ...todo,\n      done: !todo.done\n    } : todo);\n    setTodos(updatedTodos);\n  };\n  const handleRemove = id => {\n    const updatedTodos = todos.filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAdd,\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: task,\n        onChange: e => setTask(e.target.value),\n        placeholder: \"Add new task\",\n        \"data-testid\": \"task-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        \"data-testid\": \"add-button\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(ToDoItem, {\n        id: todo.id,\n        task: todo.task,\n        done: todo.done,\n        handleUpdate: handleUpdate,\n        handleDone: handleDone,\n        handleRemove: handleRemove,\n        \"data-testid\": `todo-item-${todo.id}`\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoList, \"qpdkjQASztqTT/iYpg4/s5sjGaM=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useEffect","useState","ToDoItem","jsxDEV","_jsxDEV","ToDoList","_s","todos","setTodos","JSON","parse","localStorage","getItem","task","setTask","handleAdd","e","preventDefault","trim","newTodo","id","length","done","setItem","stringify","handleUpdate","updatedTask","updatedTodos","map","todo","handleDone","handleRemove","filter","children","onSubmit","action","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/odiakonov/Desktop/testTask/sparta-test/src/components/ToDoList/ToDoList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ToDo } from \"../../interfaces/toDoList\";\nimport ToDoItem from \"../ToDoItem\";\n\nconst ToDoList: React.FC = () => {\n  const [todos, setTodos] = useState<ToDo[]>(\n    JSON.parse(localStorage.getItem(\"todos\") || \"[]\")\n  );\n\n  const [task, setTask] = useState(\"\");\n\n  const handleAdd = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n    if (task.trim() !== \"\") {\n      const newTodo: ToDo = {\n        id: todos.length + 1,\n        task,\n        done: false,\n      };\n      setTodos([...todos, newTodo]);\n      setTask(\"\");\n    }\n  };\n\n  useEffect(() => {\n    setTodos(JSON.parse(localStorage.getItem(\"todos\") || \"[]\"));\n  }, []);\n\n  useEffect(() => {\n    if (todos.length >= 0) {\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n    }\n  }, [todos]);\n\n  const handleUpdate = (id: number, updatedTask: string) => {\n    const updatedTodos = todos.map((todo) =>\n      todo.id === id ? { ...todo, task: updatedTask } : todo\n    );\n    setTodos(updatedTodos);\n  };\n\n  const handleDone = (id: number) => {\n    const updatedTodos = todos.map((todo) =>\n      todo.id === id ? { ...todo, done: !todo.done } : todo\n    );\n    setTodos(updatedTodos);\n  };\n\n  const handleRemove = (id: number) => {\n    const updatedTodos = todos.filter((todo) => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <div data-testid=\"todo-list\">\n      <form onSubmit={handleAdd} action=\"\">\n        <input\n          type=\"text\"\n          value={task}\n          onChange={(e) => setTask(e.target.value)}\n          placeholder=\"Add new task\"\n          data-testid=\"task-input\"\n        />\n        <button type=\"submit\" data-testid=\"add-button\">\n          Add\n        </button>\n      </form>\n\n      <ul>\n        {todos.map((todo) => (\n          <ToDoItem\n            key={todo.id}\n            id={todo.id}\n            task={todo.task}\n            done={todo.done}\n            handleUpdate={handleUpdate}\n            handleDone={handleDone}\n            handleRemove={handleRemove}\n            data-testid={`todo-item-${todo.id}`}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ToDoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}