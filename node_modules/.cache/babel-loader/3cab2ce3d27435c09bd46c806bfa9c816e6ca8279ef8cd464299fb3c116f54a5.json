{"ast":null,"code":"var _jsxFileName = \"/Users/odiakonov/Desktop/testTask/sparta-test/src/components/ToDoItem/ToDoItem.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from \"../ButtonComponent/Button\";\nimport \"./todoItem.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDoItem = _ref => {\n  _s();\n  let {\n    id,\n    task,\n    done,\n    handleUpdate,\n    handleDone,\n    handleRemove\n  } = _ref;\n  const [editMode, setEditMode] = useState(false);\n  const [updatedTask, setUpdatedTask] = useState(task);\n  const handleSave = () => {\n    if (updatedTask.trim() !== \"\") {\n      handleUpdate(id, updatedTask);\n      setEditMode(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo-list__item\",\n    \"data-testid\": `todo-item-${id}`,\n    children: editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updatedTask,\n        onChange: e => setUpdatedTask(e.target.value),\n        className: \"todo-list__item-edit-input\",\n        \"data-testid\": `todo-item-${id}-edit-input`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: \"todo-list__item-save\",\n        \"data-testid\": `todo-item-${id}-save`,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          textDecoration: done ? \"line-through\" : \"none\"\n        },\n        className: `todo-list__item-task ${done && \"todo-list__item-task--done\"}`,\n        \"data-testid\": `todo-item-${id}-task`,\n        children: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleDone(id),\n        className: \"todo-list__item-done\",\n        \"data-testid\": `todo-item-${id}-done`,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setEditMode(true),\n        className: \"todo-list__item-edit\",\n        \"data-testid\": `todo-item-${id}-edit`,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleRemove(id),\n        className: \"todo-list__item-remove\",\n        \"data-testid\": `todo-item-${id}-remove`,\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoItem, \"tFkFevP/RQn9qAk0MX4iQm4h5kk=\");\n_c = ToDoItem;\nexport default ToDoItem;\nvar _c;\n$RefreshReg$(_c, \"ToDoItem\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDoItem","_ref","_s","id","task","done","handleUpdate","handleDone","handleRemove","editMode","setEditMode","updatedTask","setUpdatedTask","handleSave","trim","className","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","textDecoration","_c","$RefreshReg$"],"sources":["/Users/odiakonov/Desktop/testTask/sparta-test/src/components/ToDoItem/ToDoItem.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ToDoItemI } from \"../../interfaces/ToDoItem\";\nimport Button from \"../ButtonComponent/Button\";\nimport \"./todoItem.scss\";\n\nconst ToDoItem: React.FC<ToDoItemI> = ({\n  id,\n  task,\n  done,\n  handleUpdate,\n  handleDone,\n  handleRemove,\n}) => {\n  const [editMode, setEditMode] = useState(false);\n  const [updatedTask, setUpdatedTask] = useState<string>(task);\n\n  const handleSave = () => {\n    if (updatedTask.trim() !== \"\") {\n      handleUpdate(id, updatedTask);\n      setEditMode(false);\n    }\n  };\n\n  return (\n    <li className=\"todo-list__item\" data-testid={`todo-item-${id}`}>\n      {editMode ? (\n        <>\n          <input\n            type=\"text\"\n            value={updatedTask}\n            onChange={(e) => setUpdatedTask(e.target.value)}\n            className=\"todo-list__item-edit-input\"\n            data-testid={`todo-item-${id}-edit-input`}\n          />\n          <button\n            onClick={handleSave}\n            className=\"todo-list__item-save\"\n            data-testid={`todo-item-${id}-save`}\n          >\n            Save\n          </button>\n        </>\n      ) : (\n        <>\n          <span\n            style={{\n              textDecoration: done ? \"line-through\" : \"none\",\n            }}\n            className={`todo-list__item-task ${\n              done && \"todo-list__item-task--done\"\n            }`}\n            data-testid={`todo-item-${id}-task`}\n          >\n            {task}\n          </span>\n          <Button\n            onClick={() => handleDone(id)}\n            className=\"todo-list__item-done\"\n            data-testid={`todo-item-${id}-done`}\n          >\n            Done\n          </Button>\n          <Button\n            onClick={() => setEditMode(true)}\n            className=\"todo-list__item-edit\"\n            data-testid={`todo-item-${id}-edit`}\n          >\n            Edit\n          </Button>\n          <Button\n            onClick={() => handleRemove(id)}\n            className=\"todo-list__item-remove\"\n            data-testid={`todo-item-${id}-remove`}\n          >\n            Remove\n          </Button>\n        </>\n      )}\n    </li>\n  );\n};\n\nexport default ToDoItem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}